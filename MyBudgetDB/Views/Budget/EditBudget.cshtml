@model MyBudgetDB.Models.BudgetCommands.UpdateBudgetCommand

@{
    ViewData["Title"] = "Edit Budget";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>
<hr />
<form asp-controller="Budget" asp-action="EditBudget" method="post" class="form-horizontal">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @Html.Partial("_EditBudgetPartial")
    <h3>Expenses</h3>
    <table id="ExpenseTable" class="table table-striped table-bordered table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Notes</th>
                <th>Category</th>
                <th>Amount</th>
                <th>Date Added</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="ExpenseBody">
            @for (int i = 0; i < (Model.Expenses != null ? Model.Expenses.Count() : 0); i++)
            {
                var expenses = Model.Expenses[i];
            <tr id="item">
                <td>
                    <input asp-for="Expenses[i].IdExpense" type="hidden" />
                    <input asp-for="Expenses[i].Name" />
                    <span asp-validation-for="Expenses[i].Name" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Notes" />
                    <span asp-validation-for="Expenses[i].Notes" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Category" />
                    <span asp-validation-for="Expenses[i].Category" class=" text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Amount" />
                    <span asp-validation-for="Expenses[i].Amount" class=" text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].DateAdded" type="date"/>
                    <span asp-validation-for="Expenses[i].DateAdded" class=" text-danger"></span>
                </td>
                <td>
                    <a href="#" class="remove">Remove</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="hidden" asp-for="BudgetId" />
            <input type="button" class="btn btn-success" value="Add Expense" id="addExpense">
            <button type="submit" class="btn btn-primary">Update</button>
        </div>
    </div>
</form>

<div>
    <a asp-action="ViewBudget" asp-route-id="@Model.BudgetId">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
<script>
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [year, month, day].join('-');
    }

    $(document).ready(function () {

        $.fn.dataTable.ext.order['dom-input'] = function (settings, col) {
            return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                return $('input', td).val();
            });
        }
        $('#ExpenseTable').DataTable({
            'lengthChange': false,
            'paging': false,
            'searching': false,
            "columnDefs": [
                {
                    "orderDataType": "dom-input", "targets": [0,1,2,3,4,5],
                },
            ]
        });

        var expenses = $('#ExpenseTable tbody');
        expenses.on('click', '.remove', function (e) {
            var dtRow = $(this).closest('tr');  // get tr
            $('#ExpenseTable').DataTable().row(dtRow).remove().draw(false);
            //$(this).closest('tr').remove();
        });

        $("#addExpense").click(function () {
            table = $('#ExpenseTable').DataTable();
            let rowIndex = table.rows().count();
            let dt = new Date();
            table.row.add([
                '<td><input name="Expenses[' + rowIndex + '].Name" id=Expenses_' + rowIndex + '__Name  type="text"></input></td>',
                '<td><input name="Expenses[' + rowIndex + '].Notes" id=Expenses_' + rowIndex + '__Notes  type="text"></input></td>',
                '<td><input name="Expenses[' + rowIndex + '].Category" id=Expenses_' + rowIndex + '__Category  type="text"></input></td>',
                '<td><input name="Expenses[' + rowIndex + '].Amount" id=Expenses_' + rowIndex + '__Amount  type="number"></input></td>',
                '<td><input name="Expenses[' + rowIndex + '].DateAdded" id=Expenses_' + rowIndex + '__DateAdded  type="date" value="' + formatDate(dt) + '"></input></td>',
                '<td><a href="#" class="remove">Remove</a></td>'
            ]).draw();
        });

    });

    </script>
}