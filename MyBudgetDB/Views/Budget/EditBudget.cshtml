@model MyBudgetDB.Models.BudgetCommands.UpdateBudgetCommand

@{
    ViewData["Title"] = "Edit Person";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>
<hr />
<form asp-controller="Budget" asp-action="EditBudget" method="post" class="form-horizontal">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @Html.Partial("_EditBudgetPartial")
    <h3>Expenses</h3>
    <table id="ExpenseTable" class="table table-striped table-bordered table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Notes</th>
                <th>Category</th>
                <th>Amount</th>
                <th>Date Added</th>
                <th></th>
            </tr>
        </thead>
        @*<tbody id="ExpenseBody">
            @for (int i = 0; i < Model.Expenses.Count(); i++)
            {
                var expenses = Model.Expenses[i];
            <tr id="item">
                <td>
                    <input asp-for="Expenses[i].IdExpense" type="hidden" />
                    <input asp-for="Expenses[i].Name" />
                    <span asp-validation-for="Expenses[i].Name" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Notes" />
                    <span asp-validation-for="Expenses[i].Notes" class="text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Category" />
                    <span asp-validation-for="Expenses[i].Category" class=" text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].Amount" />
                    <span asp-validation-for="Expenses[i].Amount" class=" text-danger"></span>
                </td>
                <td>
                    <input asp-for="Expenses[i].DateAdded" />
                    <span asp-validation-for="Expenses[i].DateAdded" class=" text-danger"></span>
                </td>
                <td>
                    <a href="#" class="remove">Remove</a>
                </td>
            </tr>
            }
        </tbody>*@
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="hidden" asp-for="BudgetId" />
            <input type="button" class="btn btn-success" value="Add Expense" id="addExpense">
            <button type="submit" class="btn btn-primary">Update</button>
        </div>
    </div>
</form>

<div>
    <a asp-action="ViewBudget" asp-route-id="@Model.BudgetId">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
<script>
    $(document).ready(function () {
        $('#ExpenseTable').DataTable({
            'lengthChange': false,
            'paging': false,
            'searching': false
        });
    });

    var expenses = $('#ExpenseTable tbody');
    $("#addExpense").click(function () {
        let listName = 'Expenses'; 
        let fieldsNames = ['Name', 'Category', 'Notes', 'Amount', 'DateAdded', 'remove']; //field names from Expense
        var rowIndex = expenses.find('tr').length;
        //let rowIndex = document.querySelectorAll('.item').length;
        let row = document.createElement('tr');
        row.id = 'item';
        fieldsNames.forEach((fieldName) => {
            let col = document.createElement('td');
            let input = document.createElement('input');
            if (fieldName == "DateAdded") input.type = 'date';
            else if (fieldName == 'Amount') input.type = 'number';
            else if (fieldName === 'IdExpense') col.classList.add('d-none'); //field with id - hidden
            else input.type = 'text';
            //input.classList.add('form-control');
            input.id = listName + rowIndex + '.' + fieldName;
            input.setAttribute('name', listName + '[' + rowIndex + '].' + fieldName);
            if (fieldName == "remove") {
                input = document.createElement('a');
                input.href = "#";
                input.textContent = "Remove";
                input.classList.add('remove');
            }
            col.appendChild(input);
            row.appendChild(col);
        });
        document.getElementById('ExpenseBody').appendChild(row);
    });

    expenses.on('click', '.remove', function (e) {
        $(this).closest('tr').remove();
    });

    </script>
}